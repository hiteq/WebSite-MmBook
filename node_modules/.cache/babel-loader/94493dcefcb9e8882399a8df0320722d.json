{"ast":null,"code":"var _jsxFileName = \"/Users/hiteq/Downloads/yqmdm/src/Card/index.jsx\";\nimport * as React from \"react\";\nimport { memo, useRef } from \"react\";\nimport { motion, useMotionValue } from \"framer-motion\";\nimport { Link } from \"react-router-dom\";\nimport { useInvertedBorderRadius } from \"../utils/use-inverted-border-radius\";\nimport { ContentPlaceholder } from \"./ContentPlaceholder\";\nimport { Title } from \"./Title\";\nimport { Image } from \"./Image\";\nimport { openSpring, closeSpring } from \"./animations\";\nimport { useScrollConstraints } from \"../utils/use-scroll-constraints\";\nimport { useWheelScroll } from \"../utils/use-wheel-scroll\"; // Distance in pixels a user has to scroll a card down before we recognise\n// a swipe-to dismiss action.\n\nvar dismissDistance = 150;\nexport var Card = memo(function (_ref) {\n  var isSelected = _ref.isSelected,\n      id = _ref.id,\n      title = _ref.title,\n      category = _ref.category,\n      history = _ref.history,\n      pointOfInterest = _ref.pointOfInterest,\n      backgroundColor = _ref.backgroundColor,\n      article = _ref.article;\n  var y = useMotionValue(0);\n  var zIndex = useMotionValue(isSelected ? 2 : 0); // Maintain the visual border radius when we perform the layoutTransition by inverting its scaleX/Y\n\n  var inverted = useInvertedBorderRadius(0); // We'll use the opened card element to calculate the scroll constraints\n\n  var cardRef = useRef(null);\n  var constraints = useScrollConstraints(cardRef, isSelected);\n\n  function checkSwipeToDismiss() {\n    y.get() > dismissDistance && history.push(\"/\");\n  }\n\n  function checkZIndex(latest) {\n    if (isSelected) {\n      zIndex.set(2);\n    } else if (!isSelected && latest.scaleX < 1.01) {\n      zIndex.set(0);\n    }\n  } // When this card is selected, attach a wheel event listener\n\n\n  var containerRef = useRef(null);\n  useWheelScroll(containerRef, y, constraints, checkSwipeToDismiss, isSelected);\n  return React.createElement(\"li\", {\n    ref: containerRef,\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Overlay, {\n    isSelected: isSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"card-content-container \".concat(isSelected && \"open\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(motion.img, {\n    className: \"close\",\n    src: \"images/btn_close.svg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(motion.div, {\n    ref: cardRef,\n    className: \"card-content\",\n    style: Object.assign(Object.assign({}, inverted), {\n      zIndex: zIndex,\n      y: y\n    }),\n    layoutTransition: isSelected ? openSpring : closeSpring,\n    drag: isSelected ? \"y\" : false,\n    dragConstraints: constraints,\n    onDrag: checkSwipeToDismiss,\n    onUpdate: checkZIndex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Image, {\n    id: id,\n    isSelected: isSelected,\n    pointOfInterest: pointOfInterest,\n    backgroundColor: backgroundColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Title, {\n    title: title,\n    category: category,\n    isSelected: isSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(ContentPlaceholder, {\n    article: article,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }))), !isSelected && React.createElement(Link, {\n    to: id,\n    className: \"card-open-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }));\n}, function (prev, next) {\n  return prev.isSelected === next.isSelected;\n});\n\nvar Overlay = function Overlay(_ref2) {\n  var isSelected = _ref2.isSelected;\n  return React.createElement(motion.div, {\n    initial: false,\n    animate: {\n      opacity: isSelected ? 1 : 0\n    },\n    transition: {\n      duration: 0.2\n    },\n    style: {\n      pointerEvents: isSelected ? \"auto\" : \"none\"\n    },\n    className: \"overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["/Users/hiteq/Downloads/yqmdm/src/Card/index.jsx"],"names":["React","memo","useRef","motion","useMotionValue","Link","useInvertedBorderRadius","ContentPlaceholder","Title","Image","openSpring","closeSpring","useScrollConstraints","useWheelScroll","dismissDistance","Card","isSelected","id","title","category","history","pointOfInterest","backgroundColor","article","y","zIndex","inverted","cardRef","constraints","checkSwipeToDismiss","get","push","checkZIndex","latest","set","scaleX","containerRef","Object","assign","prev","next","Overlay","opacity","duration","pointerEvents"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { memo, useRef } from \"react\";\nimport { motion, useMotionValue } from \"framer-motion\";\nimport { Link } from \"react-router-dom\";\nimport { useInvertedBorderRadius } from \"../utils/use-inverted-border-radius\";\nimport { ContentPlaceholder } from \"./ContentPlaceholder\";\nimport { Title } from \"./Title\";\nimport { Image } from \"./Image\";\nimport { openSpring, closeSpring } from \"./animations\";\nimport { useScrollConstraints } from \"../utils/use-scroll-constraints\";\nimport { useWheelScroll } from \"../utils/use-wheel-scroll\";\n// Distance in pixels a user has to scroll a card down before we recognise\n// a swipe-to dismiss action.\nconst dismissDistance = 150;\nexport const Card = memo(\n  ({\n    isSelected,\n    id,\n    title,\n    category,\n    history,\n    pointOfInterest,\n    backgroundColor,\n    article\n  }) => {\n    const y = useMotionValue(0);\n    const zIndex = useMotionValue(isSelected ? 2 : 0);\n    // Maintain the visual border radius when we perform the layoutTransition by inverting its scaleX/Y\n    const inverted = useInvertedBorderRadius(0);\n    // We'll use the opened card element to calculate the scroll constraints\n    const cardRef = useRef(null);\n    const constraints = useScrollConstraints(cardRef, isSelected);\n    function checkSwipeToDismiss() {\n      y.get() > dismissDistance && history.push(\"/\");\n    }\n    function checkZIndex(latest) {\n      if (isSelected) {\n        zIndex.set(2);\n      } else if (!isSelected && latest.scaleX < 1.01) {\n        zIndex.set(0);\n      }\n    }\n    // When this card is selected, attach a wheel event listener\n    const containerRef = useRef(null);\n    useWheelScroll(\n      containerRef,\n      y,\n      constraints,\n      checkSwipeToDismiss,\n      isSelected\n    );\n    return (\n      <li ref={containerRef} className={`card`}>\n        <Overlay isSelected={isSelected} />\n        <div className={`card-content-container ${isSelected && \"open\"}`}>\n          <motion.img className=\"close\" src=\"images/btn_close.svg\" />\n          <motion.div\n            ref={cardRef}\n            className=\"card-content\"\n            style={Object.assign(Object.assign({}, inverted), { zIndex, y })}\n            layoutTransition={isSelected ? openSpring : closeSpring}\n            drag={isSelected ? \"y\" : false}\n            dragConstraints={constraints}\n            onDrag={checkSwipeToDismiss}\n            onUpdate={checkZIndex}\n          >\n            <Image\n              id={id}\n              isSelected={isSelected}\n              pointOfInterest={pointOfInterest}\n              backgroundColor={backgroundColor}\n            />\n\n            <Title title={title} category={category} isSelected={isSelected} />\n            <ContentPlaceholder article={article} />\n          </motion.div>\n        </div>\n        {!isSelected && <Link to={id} className={`card-open-link`} />}\n      </li>\n    );\n  },\n  (prev, next) => prev.isSelected === next.isSelected\n);\nconst Overlay = ({ isSelected }) => (\n  <motion.div\n    initial={false}\n    animate={{ opacity: isSelected ? 1 : 0 }}\n    transition={{ duration: 0.2 }}\n    style={{ pointerEvents: isSelected ? \"auto\" : \"none\" }}\n    className=\"overlay\"\n  >\n    <Link to=\"/\" />\n  </motion.div>\n);\n"]},"metadata":{},"sourceType":"module"}